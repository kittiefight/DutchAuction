{
  "contractName": "HasNoTokens",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from_",
          "type": "address"
        },
        {
          "name": "value_",
          "type": "uint256"
        },
        {
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a0319163317905561035c806100256000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166317ffc32081146100665780638da5cb5b14610089578063c0ee0b8a146100ba578063f2fde38b146100eb575b600080fd5b34801561007257600080fd5b50610087600160a060020a036004351661010c565b005b34801561009557600080fd5b5061009e6101d8565b60408051600160a060020a039092168252519081900360200190f35b3480156100c657600080fd5b5061008760048035600160a060020a0316906024803591604435918201910135610061565b3480156100f757600080fd5b50610087600160a060020a03600435166101e7565b60008054600160a060020a0316331461012457600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b505050506040513d60208110156101af57600080fd5b50516000549091506101d490600160a060020a0384811691168363ffffffff61027b16565b5050565b600054600160a060020a031681565b600054600160a060020a031633146101fe57600080fd5b600160a060020a038116151561021357600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156102f757600080fd5b505af115801561030b573d6000803e3d6000fd5b505050506040513d602081101561032157600080fd5b5051151561032b57fe5b5050505600a165627a7a72305820c41319d00e8194ccd3f9eaa1d62b649cd7d2867dde2baa014997f6247197cb6c0029",
  "deployedBytecode": "0x6080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166317ffc32081146100665780638da5cb5b14610089578063c0ee0b8a146100ba578063f2fde38b146100eb575b600080fd5b34801561007257600080fd5b50610087600160a060020a036004351661010c565b005b34801561009557600080fd5b5061009e6101d8565b60408051600160a060020a039092168252519081900360200190f35b3480156100c657600080fd5b5061008760048035600160a060020a0316906024803591604435918201910135610061565b3480156100f757600080fd5b50610087600160a060020a03600435166101e7565b60008054600160a060020a0316331461012457600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038416916370a082319160248083019260209291908290030181600087803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b505050506040513d60208110156101af57600080fd5b50516000549091506101d490600160a060020a0384811691168363ffffffff61027b16565b5050565b600054600160a060020a031681565b600054600160a060020a031633146101fe57600080fd5b600160a060020a038116151561021357600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b82600160a060020a031663a9059cbb83836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156102f757600080fd5b505af115801561030b573d6000803e3d6000fd5b505050506040513d602081101561032157600080fd5b5051151561032b57fe5b5050505600a165627a7a72305820c41319d00e8194ccd3f9eaa1d62b649cd7d2867dde2baa014997f6247197cb6c0029",
  "sourceMap": "352:417:26:-;;;501:5:29;:18;;-1:-1:-1;;;;;;501:18:29;509:10;501:18;;;352:417:26;;;;;;",
  "deployedSourceMap": "352:417:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:149:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;598:149:20;-1:-1:-1;;;;;598:149:20;;;;;;;238:20:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:29;;;;;;;;-1:-1:-1;;;;;238:20:29;;;;;;;;;;;;;;637:129:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:129:26;;;;-1:-1:-1;;;;;637:129:26;;;;;;;;;;;;;;;;832:169:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;832:169:29;-1:-1:-1;;;;;832:169:29;;;;;598:149:20;663:15;653:5:29;;-1:-1:-1;;;;;653:5:29;639:10;:19;631:28;;;;;;681:21:20;;;;;;697:4;681:21;;;;;;-1:-1:-1;;;;;681:15:20;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;681:15:20;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;681:21:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:21:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:21:20;727:5;;681:21;;-1:-1:-1;708:34:20;;-1:-1:-1;;;;;708:18:20;;;;727:5;681:21;708:34;:18;:34;:::i;:::-;598:149;;:::o;238:20:29:-;;;-1:-1:-1;;;;;238:20:29;;:::o;832:169::-;653:5;;-1:-1:-1;;;;;653:5:29;639:10;:19;631:28;;;;;;-1:-1:-1;;;;;908:22:29;;;;900:31;;;;;;958:5;;;937:37;;-1:-1:-1;;;;;937:37:29;;;;958:5;;;937:37;;;980:5;:16;;-1:-1:-1;;980:16:29;-1:-1:-1;;;;;980:16:29;;;;;;;;;;832:169::o;368:120:40:-;457:5;-1:-1:-1;;;;;457:14:40;;472:2;476:5;457:25;;;;;;;;;;;;;-1:-1:-1;;;;;457:25:40;-1:-1:-1;;;;;457:25:40;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:25:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;457:25:40;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;457:25:40;450:33;;;;;;368:120;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"./CanReclaimToken.sol\";\n\n\n/**\n * @title Contracts that should not own Tokens\n * @author Remco Bloemen <remco@2π.com>\n * @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n * Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n * owner to reclaim the tokens.\n */\ncontract HasNoTokens is CanReclaimToken {\n\n /**\n  * @dev Reject all ERC223 compatible tokens\n  * @param from_ address The address that is transferring the tokens\n  * @param value_ uint256 the amount of the specified token\n  * @param data_ Bytes The data passed from the caller.\n  */\n  function tokenFallback(address from_, uint256 value_, bytes data_) external {\n    from_;\n    value_;\n    data_;\n    revert();\n  }\n\n}\n",
  "sourcePath": "/Users/achiko/Documents/elva/projects/kittiefight/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol",
  "ast": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/kittiefight/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "HasNoTokens": [
        8985
      ]
    },
    "id": 8986,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8962,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/kittiefight/DutchAuction/contracts/openzeppelin-solidity/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 8963,
        "nodeType": "ImportDirective",
        "scope": 8986,
        "sourceUnit": 8755,
        "src": "26:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8964,
              "name": "CanReclaimToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8754,
              "src": "376:15:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimToken_$8754",
                "typeString": "contract CanReclaimToken"
              }
            },
            "id": 8965,
            "nodeType": "InheritanceSpecifier",
            "src": "376:15:26"
          }
        ],
        "contractDependencies": [
          8754,
          9249
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should not own Tokens\n@author Remco Bloemen <remco@2π.com>\n@dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\nShould tokens (any ERC20Basic compatible) end up in the contract, it allows the\nowner to reclaim the tokens.",
        "fullyImplemented": true,
        "id": 8985,
        "linearizedBaseContracts": [
          8985,
          8754,
          9249
        ],
        "name": "HasNoTokens",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8983,
              "nodeType": "Block",
              "src": "713:53:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8974,
                    "name": "from_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8967,
                    "src": "719:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8975,
                  "nodeType": "ExpressionStatement",
                  "src": "719:5:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8976,
                    "name": "value_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8969,
                    "src": "730:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8977,
                  "nodeType": "ExpressionStatement",
                  "src": "730:6:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8978,
                    "name": "data_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8971,
                    "src": "742:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 8979,
                  "nodeType": "ExpressionStatement",
                  "src": "742:5:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8980,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10647,
                        10648
                      ],
                      "referencedDeclaration": 10647,
                      "src": "753:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 8981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8982,
                  "nodeType": "ExpressionStatement",
                  "src": "753:8:26"
                }
              ]
            },
            "documentation": "@dev Reject all ERC223 compatible tokens\n@param from_ address The address that is transferring the tokens\n@param value_ uint256 the amount of the specified token\n@param data_ Bytes The data passed from the caller.",
            "id": 8984,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8967,
                  "name": "from_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "660:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8969,
                  "name": "value_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "675:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8971,
                  "name": "data_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "691:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8970,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:44:26"
            },
            "payable": false,
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:26"
            },
            "scope": 8985,
            "src": "637:129:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8986,
        "src": "352:417:26"
      }
    ],
    "src": "0:770:26"
  },
  "legacyAST": {
    "absolutePath": "/Users/achiko/Documents/elva/projects/kittiefight/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "HasNoTokens": [
        8985
      ]
    },
    "id": 8986,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8962,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "/Users/achiko/Documents/elva/projects/kittiefight/DutchAuction/contracts/openzeppelin-solidity/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 8963,
        "nodeType": "ImportDirective",
        "scope": 8986,
        "sourceUnit": 8755,
        "src": "26:31:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8964,
              "name": "CanReclaimToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8754,
              "src": "376:15:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimToken_$8754",
                "typeString": "contract CanReclaimToken"
              }
            },
            "id": 8965,
            "nodeType": "InheritanceSpecifier",
            "src": "376:15:26"
          }
        ],
        "contractDependencies": [
          8754,
          9249
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should not own Tokens\n@author Remco Bloemen <remco@2π.com>\n@dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\nShould tokens (any ERC20Basic compatible) end up in the contract, it allows the\nowner to reclaim the tokens.",
        "fullyImplemented": true,
        "id": 8985,
        "linearizedBaseContracts": [
          8985,
          8754,
          9249
        ],
        "name": "HasNoTokens",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8983,
              "nodeType": "Block",
              "src": "713:53:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8974,
                    "name": "from_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8967,
                    "src": "719:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8975,
                  "nodeType": "ExpressionStatement",
                  "src": "719:5:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8976,
                    "name": "value_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8969,
                    "src": "730:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8977,
                  "nodeType": "ExpressionStatement",
                  "src": "730:6:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8978,
                    "name": "data_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8971,
                    "src": "742:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 8979,
                  "nodeType": "ExpressionStatement",
                  "src": "742:5:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8980,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10647,
                        10648
                      ],
                      "referencedDeclaration": 10647,
                      "src": "753:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 8981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8982,
                  "nodeType": "ExpressionStatement",
                  "src": "753:8:26"
                }
              ]
            },
            "documentation": "@dev Reject all ERC223 compatible tokens\n@param from_ address The address that is transferring the tokens\n@param value_ uint256 the amount of the specified token\n@param data_ Bytes The data passed from the caller.",
            "id": 8984,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8967,
                  "name": "from_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "660:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8969,
                  "name": "value_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "675:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8971,
                  "name": "data_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8984,
                  "src": "691:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8970,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:44:26"
            },
            "payable": false,
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:26"
            },
            "scope": 8985,
            "src": "637:129:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8986,
        "src": "352:417:26"
      }
    ],
    "src": "0:770:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-16T14:02:09.363Z"
}