{
  "contractName": "HasNoTokens",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "from_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>\",\"details\":\"This blocks incoming ERC223 tokens to prevent accidental loss of tokens. Should tokens (any ERC20Basic compatible) end up in the contract, it allows the owner to reclaim the tokens.\",\"methods\":{\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"token\":\"ERC20Basic The address of the token contract\"}},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"data_\":\"Bytes The data passed from the caller.\",\"from_\":\"address The address that is transferring the tokens\",\"value_\":\"uint256 the amount of the specified token\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Contracts that should not own Tokens\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol\":\"HasNoTokens\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0xf8095a46424ae3c81dc0798c860acee2bc9f6bdfa7aab8afa1d9505662e9de8b\",\"urls\":[\"bzz-raw://ab5b42ff3aa8d92804108a5f8307eb01b7bf8c2dd0e347cedeedbb2e4cbe00ac\",\"dweb:/ipfs/QmeYddgpHZfJ8f2LodPmD1jkaMGXyg98LfyaKfrVzgEbws\"]},\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol\":{\"keccak256\":\"0xf9da9d6e9a95a10310e448d724355fe3ecb4bf3ad7298964b2f74cc83272b6bb\",\"urls\":[\"bzz-raw://728fd01d6cede670e6e2d4230dc22c54a51cc2ffe1ccb9bf8b4f3f66a419eada\",\"dweb:/ipfs/QmVdrLf9e3TLutomHzxaAMrTEXke4AEbA7wvgwTdARsjsN\"]},\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/Ownable.sol\":{\"keccak256\":\"0x451fdd4ecdc32705d9a22aca5c5b053f0fbb078471786b1a373d8f4ed420b219\",\"urls\":[\"bzz-raw://edf8a8b09f1827d9526d19a62a055d6ff92cf93daa9575e998c617bf6c7e9713\",\"dweb:/ipfs/QmNyNSxT9BhGXhbC9nFJWzCnbWWttnDEZrrCUJb4puT95D\"]},\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2bcead6c923e31970542eb5b53e85fb08176fdd57011b2e8cc59346e273961b7\",\"urls\":[\"bzz-raw://3737618b61252d5203164047abeb7ceecc3cb395f7421aa9a414a477a1166e0d\",\"dweb:/ipfs/QmQ6qKdV9feN8e3MNKv11xW6Ag8x3EnuGKpfJEiD4X2rMy\"]},\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x704ecb8f5b24eeb8c8169bbcb78645f4b39629e7da0b85622aaa0264d1f30b3d\",\"urls\":[\"bzz-raw://e309adb9c28b66be304018b7c1581065c2ad3af24947e89d702475227db6a4fa\",\"dweb:/ipfs/QmecUGSVjoxpdXif2xjewaNnihiLFxiw8RBq4BAdDe3eBL\"]},\"/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x7dc9b65eafb796749aa085bc84931ce1346fd2d3489c6e3b1486207835cb3f4c\",\"urls\":[\"bzz-raw://3e35aae33179967ba17d546fca4ff521ffe6200b4ab5a17f94ae1d9bd909e552\",\"dweb:/ipfs/QmSUhtjsQk8tP7pzxVn6zmmoL6hprLKWxY22GEs5cCLVPZ\"]}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b0319163317905561035c806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806317ffc320146100515780638da5cb5b14610079578063c0ee0b8a1461009d578063f2fde38b14610122575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610148565b005b6100816101fc565b604080516001600160a01b039092168252519081900360200190f35b610077600480360360608110156100b357600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100e357600080fd5b8201836020820111156100f557600080fd5b8035906020019184600183028401116401000000008311171561011757600080fd5b50909250905061004c565b6100776004803603602081101561013857600080fd5b50356001600160a01b031661020b565b6000546001600160a01b0316331461015f57600080fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156101a957600080fd5b505afa1580156101bd573d6000803e3d6000fd5b505050506040513d60208110156101d357600080fd5b50516000549091506101f8906001600160a01b0384811691168363ffffffff61029016565b5050565b6000546001600160a01b031681565b6000546001600160a01b0316331461022257600080fd5b6001600160a01b03811661023557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050506040513d602081101561031a57600080fd5b505161032257fe5b50505056fea265627a7a72315820034d8551bb45734d639bea1021ba65af96cc69af38129656978de375d7c558dd64736f6c634300050e0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806317ffc320146100515780638da5cb5b14610079578063c0ee0b8a1461009d578063f2fde38b14610122575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610148565b005b6100816101fc565b604080516001600160a01b039092168252519081900360200190f35b610077600480360360608110156100b357600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156100e357600080fd5b8201836020820111156100f557600080fd5b8035906020019184600183028401116401000000008311171561011757600080fd5b50909250905061004c565b6100776004803603602081101561013857600080fd5b50356001600160a01b031661020b565b6000546001600160a01b0316331461015f57600080fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156101a957600080fd5b505afa1580156101bd573d6000803e3d6000fd5b505050506040513d60208110156101d357600080fd5b50516000549091506101f8906001600160a01b0384811691168363ffffffff61029016565b5050565b6000546001600160a01b031681565b6000546001600160a01b0316331461022257600080fd5b6001600160a01b03811661023557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050506040513d602081101561031a57600080fd5b505161032257fe5b50505056fea265627a7a72315820034d8551bb45734d639bea1021ba65af96cc69af38129656978de375d7c558dd64736f6c634300050e0032",
  "sourceMap": "352:431:28:-;;;496:5:31;:18;;-1:-1:-1;;;;;;496:18:31;504:10;496:18;;;352:431:28;;;;;;",
  "deployedSourceMap": "352:431:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:431:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:158:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;598:158:22;-1:-1:-1;;;;;598:158:22;;:::i;:::-;;238:20:31;;;:::i;:::-;;;;-1:-1:-1;;;;;238:20:31;;;;;;;;;;;;;;637:143:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;637:143:28;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;637:143:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;637:143:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;637:143:28;;-1:-1:-1;637:143:28;-1:-1:-1;637:143:28;:::i;827:174:31:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;827:174:31;-1:-1:-1;;;;;827:174:31;;:::i;598:158:22:-;648:5:31;;-1:-1:-1;;;;;648:5:31;634:10;:19;626:28;;;;;;681:30:22;;;-1:-1:-1;;;681:30:22;;705:4;681:30;;;;;;663:15;;-1:-1:-1;;;;;681:15:22;;;;;:30;;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;681:30:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:30:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:30:22;736:5;;681:30;;-1:-1:-1;717:34:22;;-1:-1:-1;;;;;717:18:22;;;;736:5;681:30;717:34;:18;:34;:::i;:::-;660:1:31;598:158:22;:::o;238:20:31:-;;;-1:-1:-1;;;;;238:20:31;;:::o;827:174::-;648:5;;-1:-1:-1;;;;;648:5:31;634:10;:19;626:28;;;;;;-1:-1:-1;;;;;903:22:31;;895:31;;;;;;958:5;;;937:37;;-1:-1:-1;;;;;937:37:31;;;;958:5;;;937:37;;;980:5;:16;;-1:-1:-1;;;;;;980:16:31;-1:-1:-1;;;;;980:16:31;;;;;;;;;;827:174::o;368:120:42:-;457:5;-1:-1:-1;;;;;457:14:42;;472:2;476:5;457:25;;;;;;;;;;;;;-1:-1:-1;;;;;457:25:42;-1:-1:-1;;;;;457:25:42;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:25:42;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;457:25:42;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;457:25:42;450:33;;;;368:120;;;:::o",
  "source": "pragma solidity ^0.5.10;\n\nimport \"./CanReclaimToken.sol\";\n\n\n/**\n * @title Contracts that should not own Tokens\n * @author Remco Bloemen <remco@2π.com>\n * @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n * Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n * owner to reclaim the tokens.\n */\ncontract HasNoTokens is CanReclaimToken {\n\n /**\n  * @dev Reject all ERC223 compatible tokens\n  * @param from_ address The address that is transferring the tokens\n  * @param value_ uint256 the amount of the specified token\n  * @param data_ Bytes The data passed from the caller.\n  */\n  function tokenFallback(address from_, uint256 value_, bytes calldata data_) pure external {\n    from_;\n    value_;\n    data_;\n    revert();\n  }\n\n}\n",
  "sourcePath": "D:\\projects\\kittiefight\\token\\DutchAuction\\contracts\\openzeppelin-solidity\\ownership\\HasNoTokens.sol",
  "ast": {
    "absolutePath": "/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "HasNoTokens": [
        8425
      ]
    },
    "id": 8426,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8402,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:28"
      },
      {
        "absolutePath": "/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 8403,
        "nodeType": "ImportDirective",
        "scope": 8426,
        "sourceUnit": 8189,
        "src": "26:31:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8404,
              "name": "CanReclaimToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8188,
              "src": "376:15:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimToken_$8188",
                "typeString": "contract CanReclaimToken"
              }
            },
            "id": 8405,
            "nodeType": "InheritanceSpecifier",
            "src": "376:15:28"
          }
        ],
        "contractDependencies": [
          8188,
          8691
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should not own Tokens\n@author Remco Bloemen <remco@2π.com>\n@dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\nShould tokens (any ERC20Basic compatible) end up in the contract, it allows the\nowner to reclaim the tokens.",
        "fullyImplemented": true,
        "id": 8425,
        "linearizedBaseContracts": [
          8425,
          8188,
          8691
        ],
        "name": "HasNoTokens",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8423,
              "nodeType": "Block",
              "src": "727:53:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8414,
                    "name": "from_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8407,
                    "src": "733:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8415,
                  "nodeType": "ExpressionStatement",
                  "src": "733:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8416,
                    "name": "value_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8409,
                    "src": "744:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8417,
                  "nodeType": "ExpressionStatement",
                  "src": "744:6:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8418,
                    "name": "data_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8411,
                    "src": "756:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 8419,
                  "nodeType": "ExpressionStatement",
                  "src": "756:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8420,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10109,
                        10110
                      ],
                      "referencedDeclaration": 10109,
                      "src": "767:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 8421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8422,
                  "nodeType": "ExpressionStatement",
                  "src": "767:8:28"
                }
              ]
            },
            "documentation": "@dev Reject all ERC223 compatible tokens\n@param from_ address The address that is transferring the tokens\n@param value_ uint256 the amount of the specified token\n@param data_ Bytes The data passed from the caller.",
            "id": 8424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8407,
                  "name": "from_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "660:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8409,
                  "name": "value_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "675:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8411,
                  "name": "data_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "691:20:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8410,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:53:28"
            },
            "returnParameters": {
              "id": 8413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:28"
            },
            "scope": 8425,
            "src": "637:143:28",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8426,
        "src": "352:431:28"
      }
    ],
    "src": "0:784:28"
  },
  "legacyAST": {
    "absolutePath": "/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "HasNoTokens": [
        8425
      ]
    },
    "id": 8426,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8402,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:28"
      },
      {
        "absolutePath": "/D/projects/kittiefight/token/DutchAuction/contracts/openzeppelin-solidity/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 8403,
        "nodeType": "ImportDirective",
        "scope": 8426,
        "sourceUnit": 8189,
        "src": "26:31:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8404,
              "name": "CanReclaimToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8188,
              "src": "376:15:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CanReclaimToken_$8188",
                "typeString": "contract CanReclaimToken"
              }
            },
            "id": 8405,
            "nodeType": "InheritanceSpecifier",
            "src": "376:15:28"
          }
        ],
        "contractDependencies": [
          8188,
          8691
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should not own Tokens\n@author Remco Bloemen <remco@2π.com>\n@dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\nShould tokens (any ERC20Basic compatible) end up in the contract, it allows the\nowner to reclaim the tokens.",
        "fullyImplemented": true,
        "id": 8425,
        "linearizedBaseContracts": [
          8425,
          8188,
          8691
        ],
        "name": "HasNoTokens",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8423,
              "nodeType": "Block",
              "src": "727:53:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8414,
                    "name": "from_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8407,
                    "src": "733:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8415,
                  "nodeType": "ExpressionStatement",
                  "src": "733:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8416,
                    "name": "value_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8409,
                    "src": "744:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8417,
                  "nodeType": "ExpressionStatement",
                  "src": "744:6:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8418,
                    "name": "data_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8411,
                    "src": "756:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 8419,
                  "nodeType": "ExpressionStatement",
                  "src": "756:5:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8420,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10109,
                        10110
                      ],
                      "referencedDeclaration": 10109,
                      "src": "767:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 8421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8422,
                  "nodeType": "ExpressionStatement",
                  "src": "767:8:28"
                }
              ]
            },
            "documentation": "@dev Reject all ERC223 compatible tokens\n@param from_ address The address that is transferring the tokens\n@param value_ uint256 the amount of the specified token\n@param data_ Bytes The data passed from the caller.",
            "id": 8424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8407,
                  "name": "from_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "660:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8409,
                  "name": "value_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "675:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8411,
                  "name": "data_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "691:20:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8410,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "659:53:28"
            },
            "returnParameters": {
              "id": 8413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:28"
            },
            "scope": 8425,
            "src": "637:143:28",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8426,
        "src": "352:431:28"
      }
    ],
    "src": "0:784:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-09T19:32:28.899Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>",
    "details": "This blocks incoming ERC223 tokens to prevent accidental loss of tokens. Should tokens (any ERC20Basic compatible) end up in the contract, it allows the owner to reclaim the tokens.",
    "methods": {
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "token": "ERC20Basic The address of the token contract"
        }
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "data_": "Bytes The data passed from the caller.",
          "from_": "address The address that is transferring the tokens",
          "value_": "uint256 the amount of the specified token"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Contracts that should not own Tokens"
  },
  "userdoc": {
    "methods": {}
  }
}